// Gets the size and returns false when it's not set

@function getsides($sides: $sides) {
  @if length($sides) == 3 {
    $skip: nth($sides, 3);
    @return $skip;
  } @else if length($sides) == 1 {
    @return false;
  }
}


// Gets the container size and returns the set variable when it's not set

@function getcontainer($span: $span) {
  @if length($span) == 3 {
    $container: nth($span, 3);
    @return $container;
  } @else if length($span) == 1 {
    @return $gridder-container;
  }
}


// Gets the from size and returns false when it's 0

@function getFrom($fromto) {
  $from: nth($fromto, 1);
  @if $from == 0 {
    $from: false
  }
  @return $from;
}


// Gets the to size and returns false when it's not set

@function getTo($fromto) {
  @if length($fromto) == 3 {
    $to: nth($fromto, 3);
    @return $to;
  } @else if length($fromto) == 1 {
    @return false;
  }
}


// Loop through breakpoints
@function largestWidth() {
  $width: false;
  @each $breakpoint, $values in $gridder-breakpoints {
    $width: map-get($values, width);
  }
  @return $width;
}


// Loop through breakpoints
@function largestGutter() {
  $gutter: false;
  @each $breakpoint, $values in $gridder-breakpoints {
    $gutter: map-get($values, gutter);
  }
  @return $gutter;
}


// Borrowed from NEAT
//

$parent-columns: $gridder-container;
$grid-default-width: round($gridder-gutter-l * 4);
$grid-default-gutter: $gridder-gutter-l;
$grid-max-columns: $gridder-container;

@function calculatePercentageWidth($columns, $container-columns: $grid-max-columns) {
  $width: $columns * $grid-default-width + ($columns - 1) * $grid-default-gutter;
  $container-width: $container-columns * $grid-default-width + ($container-columns - 1) * $grid-default-gutter;
  @return percentage($width / $container-width);
}

@function calculatePercentageGutter($container-columns: $grid-max-columns, $gutter: $grid-default-gutter) {
  $container-width: $container-columns * $grid-default-width + ($container-columns - 1) * $grid-default-gutter;
  @return percentage($gutter / $container-width);
}